name: Deploy to AWS (ECR/EKS)
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION:       ${{ secrets.AWS_REGION }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  ECR_REPOSITORY:   ${{ secrets.ECR_REPOSITORY }}
  PROJECT_DLL:      ${{ secrets.PROJECT_DLL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: '8.0.x' }

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check ECR repo (optional create)
        id: ecrchk
        run: |
          set -e
          if aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            aws ecr create-repository --repository-name "$ECR_REPOSITORY" >/dev/null
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Compute image tag/uri
        run: |
          echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "ECR_REGISTRY=${{ steps.ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "IMAGE_URI=${{ steps.ecr.outputs.registry }}/${ECR_REPOSITORY}:${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ env.IMAGE_URI }}
          build-args: |
            PROJECT_DLL=${{ env.PROJECT_DLL }}

      - name: Does EKS cluster exist?
        id: ekschk
        run: |
          if aws eks describe-cluster --name "$EKS_CLUSTER_NAME" >/dev/null 2>&1; then
            echo "has_cluster=true" >> $GITHUB_OUTPUT
          else
            echo "::notice::EKS cluster not found; skipping deployment."
            echo "has_cluster=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure kubeconfig
        if: steps.ekschk.outputs.has_cluster == 'true'
        run: aws eks update-kubeconfig --name "$EKS_CLUSTER_NAME" --region "$AWS_REGION"

      - uses: azure/setup-helm@v4
        if: steps.ekschk.outputs.has_cluster == 'true'

      - name: Helm upgrade/install
        if: steps.ekschk.outputs.has_cluster == 'true'
        run: |
          helm upgrade --install weather-api ./helm/weather-api \
            --namespace default \
            --set image.repository="${ECR_REGISTRY}/${ECR_REPOSITORY}" \
            --set image.tag="${IMAGE_TAG}" \
            --set service.type=LoadBalancer
